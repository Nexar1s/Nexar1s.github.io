[{"id":"0cf4458af37e18777158807fe15efcc1","title":"首次使用Pipenv","content":"Ubuntu 23.10的情况下使用pip install -r requirements.txt时出现问题\n❯ pip3 install -r requirements.txt\nerror: externally-managed-environment\n\n× This environment is externally managed\n╰─&gt; To install Python packages system-wide, try apt install\n    python3-xyz, where xyz is the package you are trying to\n    install.\n    \n    If you wish to install a non-Debian-packaged Python package,\n    create a virtual environment using python3 -m venv path/to/venv.\n    Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make\n    sure you have python3-full installed.\n    \n    If you wish to install a non-Debian packaged Python application,\n    it may be easiest to use pipx install xyz, which will manage a\n    virtual environment for you. Make sure you have pipx installed.\n    \n    See /usr/share/doc/python3.11/README.venv for more information.\n\nnote: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.\nhint: See PEP 668 for the detailed specification.\n\n背后的原因目前多个Linux最新的发行版中，正在使用Python包来实现增强功能。\n这个更新是为了避免「操作系统包管理器 (如pacman、yum、apt) 和 pip 等特定于 Python 的包管理工具之间的冲突」。\n更多详情可以在官网查看：\n[Python增强提案]: \n[Python增强提案(PEP)]: https://realpython.com/python-virtual-environments-a-primer/?ref=yaolong.net\t“PEP 668 - Python base environments”\n解决方案使用pipenv\nsudo apt install pipenv -y\n\nPipenv是官方推荐的python包管理工具，可以实现项目之间依赖的隔离。\n虚拟环境简单来讲，虚拟环境就是隔离你项目中安装的库的一个环境。想象一下，如果想在当前电脑中做几个需要不同依赖以及不同的库的项目，而其中要求了不同版本的同一依赖，直接安装的话可能会带来意想不到的麻烦。因此，通常我们会为每一个项目都创建一个虚拟环境，以此来隔离各个项目的工作环境。\n创建虚拟环境创建自己的项目目录，在该目录下使用命令pipenv install可以创建一个虚拟的环境。默认为当前全局环境中已有的Python版本\n如果想指定创建的虚拟环境的Python版本，可以使用以下命令：\npipenv --python 3.6   #指定使用Python3.6的虚拟环境\npipenv --two          #使用系统的Python2来创建虚拟环境\npipenv --three\t\t  #使用系统的Python3来创建虚拟环境\n\n#注意：以上三个参数只能单独使用。它们还具有破坏性，会删除当前的虚拟环境，然后用适当版本的虚拟环境替代\n\n当给定了一个Python版本的时候，Pipenv会自动扫描系统中能够匹配给定的Pyhton版本的Python解释器，没制定版本时，使用系统默认的Python版本。\n执行完命令，项目文件夹会生成两个文件，Pipfile``和Pipfile.lock。如果命令执行前项目目录中不存在Pipfile文件，该命令将会创建一个Pipfile文件。如果已经有Pipfile，存在则会根据这个Pipfile生成虚拟环境。\nPipfile内容解析打开Pipfile文件，可以看到如下内容：\n[[source]]\nurl = &quot;https://pypi.org/simple&quot;\nverify_ssl = true\nname = &quot;pypi&quot;\n\n[packages]\njsbeautifier = &quot;==1.14.0&quot;\njsmin = &quot;==3.0.0&quot;\nloguru = &quot;==0.5.3&quot;\npycryptodome = &quot;==3.11.0&quot;\n\n[dev-packages]\n\n[requires]\npython_version = &quot;3.11&quot;\n\n\nsource 用来设置仓库地址，即从哪下载虚拟环境所需要的包\npackages用来制定项目依赖的包，即你安装了的想要引用到虚拟环境的包\ndev-packages用来指定开发环境需要的包，这类包只用于开发过程，不用于生产环境，比如单元测试相关的包，只在开发阶段有用，这样分开便于管理\nrequires中制定目标Python版本\n\nPipfile.lock文件\nPipfile.lock中记录了当前虚拟环境中安装的依赖的版本号以及哈希，以保证被次根据这些值出来的依赖都是一致的，该文件用来保证包的完整性。记住，任何情况下都不要手动修改该文件！\n项目提交时，可将Pipfile文件和Pipfile.lock一并提交，给其他开发人员克隆下载，他们可以根据此Pipfile文件运行命令pipenv install生成自己的虚拟环境。\n\n","slug":"0cf4458af37e18777158807fe15efcc1","date":"2025-03-31T10:19:53.815Z","categories_index":"Linux","tags_index":"Linux,Python","author_index":"Nexaris"},{"id":"701bc17731ac4fc87b68301cbb3d53db","title":"Pixhawk飞控事件汇总","content":"最近装调课上体验了Pixhawk飞控的配置与调试，遇到了一些问题，大多数问题都在网上能查到解决方法，蜂鸣器报错含义在Pixhawk官网上也有，难度也就不那么大了。\n\n\n\n\n\n\nTIP\n[蜂鸣器含义]: https://docs.px4.io/v1.11/zh/getting_started/tunes.html\t“蜂鸣器含义”[LED 含义（Pixhawk系列）]: https://docs.px4.io/main/zh/getting_started/led_meanings.html#led-%E7%8A%B6%E6%80%81\t“LED 含义（Pixhawk系列）”[LED闪烁]: https://ardupilot.org/copter/docs/common-leds-pixhawk.html#led-buzzer-meanings\t“LED闪烁”\n\n\n测试器材电脑（需安装Mission Planner），电池，Pixhawk飞控，安全开关，蜂鸣器，PPM编码器（PPM Encoder），接收机，电调，电机，分电板，电源分线器（由于不知道叫什么所以编了个名字）\n测试步骤给Pixhawk飞控刷写固件：　　先连接蜂鸣器（飞控上为Buzzer接口），用数据线将飞控连接电脑，打开Mission Planner，注意此时不要在右上角选择串口进行连接，只要数据线连上就行了。\n　　点击左上角的初始设置，找到安装固件，选择设备类型，这里我们课上以四旋翼为例。固件平台选择Pixhawk1，点击确认升级，然后按照提示走即可。\n　　最后，若刷写成功，则进度条左下角Status显示为Upload Done，并且飞控自动进行自检后开机（注意听蜂鸣器），否则显示为Error，且飞控会处于通电但一直无法开机。\n连接并调试接收机：　　在飞控断电关机的状态下在RC in接口插上PPM编码器（线少的一端的红白黑三线接口插上飞控的RC in），检查PPM编码器线多的一端，以这一端的红白黑三线接口为通道1依次按顺序连接接收机。\n　　连接好之后飞控插上数据线通电待其自检开机，此时接收机已经通电，就可以开始对码了。\n校准飞控：　　使用数据线将电脑与飞控连接之后在Mission Planner右上角选择串口（如COM5），再点击连接按钮，就能成功连接飞控了。由于我们测试时没有接gps以及指南针，所以这里就只校准机架类型和加速度计以及遥控器。\n　　点击Mission Planner左上方初始设置，在左侧栏中点击必要硬件，选择机架类型，按照实际情况选择。然后点击加速度计校准，点击开始，Mission Planner会提示你校准步骤，按照步骤来就好。（校准完毕之后尝试断电再通电重启飞控，避免出现Accels calibrated requires reboot）\n　　最后进行遥控器校准，在校准界面中能够看到遥控器各个通道的杆量，注意哪些通道反了，以及切换飞行模式的通道是哪一个（若拨动到切换飞行模式的开关了，飞控的蜂鸣器将会提示），根据实际情况以及个人喜好在遥控器上调整通道，然后在Mission Planner的遥控器校准界面点击开始校准并根据提示完成校准。\n连接并校准电调及电机：　　我们拿到的东西直接就是完整的机臂，其上安装的电机已经与电调连接。\n　　将电调连接到分电板上，可能需要烙铁焊锡，然后在飞控未通电的情况下将电调上的信号线（我们测试使用的电调的杜邦线为黑白双线接口）连接到飞控上，应接到飞控上面的main口中的1到4（注意正负极，没有正极也要注意负极），将安全开关也接入到飞控上，在Switch接口。将电源分线器上的较细小的接口线接到飞控的Power口上，然后将电源分线器对应电池和分电板的接口连接上，这样就将整个结构全部通电了。\n　　此时将数据线再次连接飞控和电脑并点击连接按钮，待连接成功之后在左上角 初始设置 - 必要硬件 中找到ESC Calibration，也就是电调校准，点击开始，然后拔掉电池，再拔掉数据线，达到全部关机的状态，然后插上电池，确保没有连接数据线，此时飞控开机后指示灯闪烁红蓝绿色，这说明飞控处于电调检测模式，按下安全开关，待其红色常亮，电调或者飞控发出三声连续响声，就算是自检过了。然后飞控接上电池，通电开机，若正常开机了，而没有出现ESC校准模式（红蓝绿三灯闪烁）就算校准完成。\n设置飞行模式：　　在遥控器校准时找到飞行模式开关，按照实际情况设置，最好是三段式拨杆。\n　　用数据线连接飞控并选择串口点击连接，待连接成功后，左上角 初始设置 - 必要硬件 - 飞行模式。所有飞行模式都可以解锁，但是大部分模式要求GPS已经校准或者已定义过航点，我们没有连接GPS和指南针的情况下确保当前飞行模式为Stabilize（自稳模式）就行了。将飞行模式开关拨动后会选中的三个飞行模式的槽位中的其中一个改成Stabilize，然后点击保存。\n　　在飞行数据界面拨动飞行模式开关，显示为Stabilize就说明可以解锁并启动电机了。按下安全开关直至其红灯常亮，再遥控器内八解锁。能够解锁的提示音应该是长响，若为其它提示音而且不能解锁，请查看本页面顶部的蜂鸣器含义（这里的蜂鸣器指的是飞控的，需注意电机和电调也会响，不了解是为什么出现声音报错请对照教材或者在网上查询资料）。\n报错信息\n\n\n报错\n原因&#x2F;解释\n解决方法\n\n\n\nAccels calibrated requires reboot\n飞控在校准加速度计之后必须重启\n重启飞控\n\n\nAccels inconsistent\n飞控的两个加速度计的读数存在较大差异\n重新校准加速度计\n\n\n3D Accel calibration needed\n还没有进行过加速度计校准\n校准加速度计\n\n\nMotors Emergency Stopped\n这实际上是一个功能，用于紧急停止电机\n在 配置&#x2F;调试 界面中高级设置找到并改为Do nothing\n\n\n以上是常遇到的报错信息，基本上照着解决方法做就能搞定。\n若Motors Emergency Stopped在尝试解决方法中的内容后还一直存在，大概率是电调的问题，请尝试校准电调。\n若没有任何报错信息，且遥控器也能够解锁电机，但是电机却不旋转，有可能是MOT_SPIN_MIN和MOT_SPIN_ARM的数值问题，可以到全部参数表查看（部分老版本Mission Planner在全部参数表不会显示默认参数，我的建议是安装最新版的Mission Planner）\n为什么要用到PPM编码器？我个人认为是我们当前使用的遥控器不支持输出PPM信号，则将8个PWM信号输出给PPM编码器，编码器将8个PWM信号整合成一个PPM信号传递给飞控的RC in接口\n\n\n\n\n\n\n\nWARNING\n每一次尝试解锁失败时，请务必检查当前飞行模式是否为Stabilize！\n\n","slug":"701bc17731ac4fc87b68301cbb3d53db","date":"2024-06-21T16:54:26.000Z","categories_index":"课程","tags_index":"装调,飞控","author_index":"Nexaris"},{"id":"1522143e4defc151fca457b7d922878e","title":"CC项目如何使用计算机集群功能","content":"最近航测课的实训作业下来了，其正射影像的照片大约900到1000多张图片，倾斜影像更是高达5000张。这些照片跑的项目对于单独的笔记本电脑来说负担相当大，要耗费极大量时间来出结果图。而ContextCapture Center提供了计算机集群运算的功能，对于Pix4Dmapper本地处理仅能单个计算机运行要多出一个选择。\n该功能基于UNC网络路径来让软件识别资源路径，任务序列路径，以及项目路径，意味着计算机集群功能需要靠网络将计算机连接在一起达到互相通信的效果。已经测试过的情况为以太网网线连接，雷电数据线作为网线连接，主要是因为我主观认为有线连接的传输效率要高于无线网络传输，但是理论上使用无线网络在同一局域网下的计算机或者拥有公网ip的计算机也能够按照即将介绍的方法进行配置并使用计算机集群功能处理项目\n以下针对ContextCapture Center计算机集群的配置过程作一个示例。\n准备工作示例为两台电脑，计算机A，计算机B\n设置网络使用网线将两台电脑连接，此时两台电脑上的以太网适配器都会提示已接入未知网络，这是因为并没有路由器介于该网络中，没有DHCP服务自动分配ip地址，这里需要手动给计算机A和计算机B设置ip地址\n比如，计算机A为192.168.100.100，计算机B为192.168.100.101，子网掩码都默认为255.255.255.0。设置好后两台电脑就算处于同一局域网下了\n\n\n\n\n\n\n\nWARNING\n注意：下面设置ip地址的步骤需要分别在两台电脑上操作，并非一台电脑就能操作的哦\n\n打开控制面板，选择并点击网络和Internet&gt;网络和共享中心，这里会列出电脑的网络连接，其中我们需要查看并修改的是以太网的连接，它应该显示为未识别的网络且访问类型为无法连接到Internet。在以太网状态的窗口中点击属性，然后在弹出来的以太网属性窗口中确保Microsoft 网络的文件和打印机共享和Microsoft 网络客户端这两项是勾选上了的，再鼠标双击打开Internet 协议版本4（TCP/IPV4），我这里继续按照上面举的例子设置\n不过想要计算机A和计算机B能够互相访问还需要关闭防火墙并开启磁盘共享。两台电脑都在Windows安全中心关闭网络防火墙之后按下Win + R输入cmd并点击运行，在弹出来的命令行窗口按照下面输入：\n#计算机B输入：\nping 192.168.100.100\n#计算机A输入：\nping 192.168.100.101\n\n若提示超时或者没有回应，大概率是防火墙的问题，请百度如何关闭Windows防火墙。\n若反馈都为有回复且没有丢包，那就说明两台电脑之间已经可以互相通信了。但是目前还不能互相访问其中的文件。\n设置文件共享两台计算机都打开文件资源管理器，鼠标右键点击需要使用的磁盘，比如D盘，选择属性，再点击共享，选择高级共享，在弹出来的窗口中选择权限，在权限窗口中选择Everyone用户，并在下面的权限选择中将完全控制勾选上并应用。注意这里是两台电脑都需要进行这样的操作\n计算机A按下Win + R并输入\\\\192.168.100.101（也就是计算机B的ip地址），若能够访问，那么会弹出一个窗口让你输入用户名以及密码，这里的用户名和密码是计算机B上的用户名和密码，输入之后点击记住凭证，此时应该就能从计算机A上看到计算机B上的D盘了\n计算机B上操作同上，但是需将ip地址换为计算机A的地址\nCC配置那么现在已经确保了两台计算机能够互相交换文件了，现在就打开CC进行配置。\n这里将计算机A作为主机，计算机B作为从机，我将项目文件，任务序列，资源文件都放在主机上，主机打开ContextCapture Center Master然后在自己选择的路径创建项目，这里以我电脑的实际情况D:\\Users\\XOS\\Documents\\CC\\TestProject为例。由于计算机集群需要使用UNC网络路径，所以这里路径应改为“//目标主机的ip地址/d/Users/XOS/Documents/CC/TestProject”，而我这里计算机A为主机且所有文件也都位于计算机A的话这里就输入//192.168.100.100/d/Users/XOS/Documents/CC/TestProject\n创建好项目之后在项目页面左边的文件树点击一下最顶端的项目名称，在右方的页面中点击选项，并检查并将以下路径都修改为网络路径，其中任务序列路径我已经提前创建好了，和项目文件夹在同一目录下，为jobs\n到这里就算主机配置好了，接下来设置从机\n由于从机只需要运行CC引擎，所以直接打开CCSettings（如果找不到CCSettings.exe，请鼠标右键点击桌面上的ContextCapture Center Master快捷方式并打开文件所在位置，CCSettings.exe就在这里），进入配置页面，修改任务序列目录为和主机的任务序列目录一样的文件夹\n设置好之后在从机上点击确定，并直接启动CC引擎。\n回到主机界面上，往项目里面添加照片，添加好之后注意一点就是这里你选择照片并添加后，它的路径其实是绝对路径，也就不符合我们计算机集群所需要使用的UNC网络路径，所以需要修改一下。\n打开ContextCapture Center的资源路径管理器，然后看到已添加的影像集合的本地路径，双击并将其修改为网络路径，比如，若我的照片在D:\\zhengshe中，那么它在计算机A上的网络路径就是“//192.168.100.100/d/zhengshe”，修改好之后点击右边的更新状态，如果本地状态显示为可访问那就搞定了\n这个时候在主机上启动CC引擎，再点击提交空中三角测量计算，将空三的详细设置调整好并提交后，点击监视任务序列，若显示为2个运算引擎端就算成功了，而作业详细信息展开后右边正在运行的任务则会显示当前计算机A和B正在运行的任务，如果发现正在运行的任务中只显示了一台电脑，有可能是当前任务项只有一个，只能分配个一台电脑，跑空三的时候多为这种情况。而重建项目不论是正射影像还是倾斜影像这种分了多个任务项的生产项目基本上都是两台电脑各自得到一个不同的任务项同时运行\n\n这里的图片是找的一个正在跑的项目的截图，与上面举的例子稍有不同\n就此，计算机集群的基本使用方法大概就是这些了。\n","slug":"1522143e4defc151fca457b7d922878e","date":"2024-05-14T15:53:31.000Z","categories_index":"航测,课程","tags_index":"ContextCaptureCenter,软件","author_index":"Nexaris"},{"id":"6ff25304366cbef72174e3c9a2bdc051","title":"重航两江校园网同时登录两台手机或电脑","content":"关于校园网　　重航两江校区这边的话，联通校园卡给的宽带是限制了一部手机和一台电脑同时使用。根据需求有时候需要两台手机或者两台电脑使用的话就相当的麻烦了，甚至很多同学是两个人合租一个校园宽带账号。一点都不人性化。在琢磨出这个办法之前一直都是借用同学暂时不用的认证位置，或者用其中一台认证过的设备开热点给需要的设备使用。而且校园卡的校园流量给的每个月好几大百G根本用不完。\t　　经过我豆腐渣🧠的极限思考，揣摩大半天终于是大概明白了咱们校园网认证页面的部分真相：首先，认证系统是通过设备的MAC地址来辨别尝试上网的设备是否是已经允许上网。其次，由于校园网认证是网页认证，所以认证过程中由用户的浏览器提供的User-Agent来区分认证的设备是手机还是电脑。\nMac地址　　网络中每台设备都有一个唯一的网络标识，这个地址叫MAC地址或网卡地址，MAC地址也叫物理地址、硬件地址，由网络设备制造商生产时烧录在网卡中的，路由器根据MAC地址分配IP地址。说白了，就像是你的手机或者电脑在网络中的身份证一样，认证系统就靠这玩意来识别上网的设备到底是不是交过钱的。　　　　一般来说，MAC地址是没办法修改的，不过貌似目前80%的手机在联网选项里面都有个随机MAC的选项，说是为了安全考虑添加的选项来着，如果开了随机MAC的话，每一次MAC发生改变就都需要再重新认证一次校园网，所以我推荐关掉这个。　　　　我依稀记得小时候爸妈在路由器上设置了禁止我的手机上网的功能，就是根据MAC地址选择的我的手机，被我用手机上的联发科工程模式修改MAC地址给绕过了。欲望是学习的第一动力！\nUser-Agent　　如果你留心注意过各大软件的网站在手机上浏览和在电脑上浏览的区别的话，就能明白网页应该是根据什么东西检测到用户使用的是什么设备。比如QQ音乐的移动端网页和PC端网页。而这个东西就是User Agent，简称UA。\n一些网站常常通过判断 UA 来给不同的操作系统、不同的浏览器发送不同的页面，因此可能造成某些页面无法在某个浏览器中正常显示，但通过伪装 UA 可以绕过检测。\n百度百科用户代理\n\n　　校园网认证的方式为网页认证，那么检测设备类型就靠浏览器的UA来实现，而且只检测这一次 应该是吧 ，在登录的同时将设备类型和当前认证设备的MAC地址绑定在一起丢在用户自助服务系统的我的设备列表里。\n开始操作下面以一个账号认证两台电脑为例\n\n拿一台电脑先连接上校园网并直接认证，这一台就是正常作为PC设备认证上网的。\n\n另外一台电脑再连接上校园网，若自动弹出认证界面，就先关掉。\n\n打开浏览器（以edge浏览器为例），按下Ctrl+Shift+I弹出开发者工具。\n\n\n　　4. 再按下Ctrl+Shift+P弹出运行面板，在运行面板中输入网络条件并回车。\n　　5. 在网络条件选单中找到用户代理选项，把用户浏览器默认的勾去掉。\n\n选择自定义，并在框中填写一个手机的UA，比如：Mozilla/5.0 (Linux; Android 10; K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Mobile Safari/537.36\n\n　　7. 不要关闭开发者工具，直接在浏览器上输入10.200.4.200进入认证页面，并直接输入学号以及密码进行认证。8. 提示认证成功后检查是否为两台电脑能够同时使用网络，或者进入用户自助服务系统中的我的设备中显示的MAC地址是不是你自己的两个同类型设备（仍然显示为一部手机和电脑，但是MAC地址为你修改过UA的设备的MAC地址）\n","slug":"6ff25304366cbef72174e3c9a2bdc051","date":"2024-04-22T16:52:12.000Z","categories_index":"网络","tags_index":"网络","author_index":"Nexaris"},{"id":"05077cf2c12b17104d7a64cc6bea21c9","title":"Proteus8.8和Keil的安装过程","content":"单片机课上需要用到Proteus，Keil两款软件。Proteus用于绘制原理图以及仿真模拟，Keil用于编写单片机使用的程序，下面记录了这两款软件的安装过程\n\n\n\n\n\n\n\nWARNING\n注意：文章中使用的并非Windows系统，这篇安装过程中可能出现和Windows不同的界面或者路径，但步骤都是一样的\n\n安装Keil需要准备以下两个文件：\n\nc51v959.exe为Keil的安装包，keygen.exe为破解工具。\n安装步骤\n双击打开c51v959.exe，弹出安装对话框。\n点击Next进入到了条款界面，勾选上I agree to all the terms of the preceding License Agreement。\n继续点击Next进入安装路径界面，路径随意，但最好不要有中文\n点击Next，这次进入了客户信息填写界面，因为我们本来就要用破解的，所以这里4个输入框随便填写\n再次点击Next，安装就开始了。\n待进度条读完之后取消这两个选框并点击Finish\n\n\n破解激活Keil此时，桌面上应该已经出现了Keil的桌面图标，鼠标右键点击它选择以管理员身份运行。\n在Keil主界面左上角，点击File，再点击License Management，并复制在新弹出来的窗口右上角的CID（Computer ID）（如果不能 右键&gt;复制 的话，就鼠标长按并拖动全部选中再按键盘 Ctrl+C）\n\n复制之后运行破解软件keygen.exe，将刚刚复制的CID输入到对应的位置，然后其它内容不要更改，直接点击Generate，就能看到新生成的激活码。将激活码复制下来\n\n回到刚才Keil中License Management的对话框中，在New License ID Code (LIC)中粘贴，并点击Add LIC，然后点击Close关闭对话框。\n\nKeil的安装就到此为止\n此后运行Keil应该是不需要再使用管理员身份运行了，直接打开即可\n\n\n安装Proteus 8.8需要准备的文件如下：Crack  Translations  proteus8.8.SP1.exe\n\n安装步骤\n双击打开proteus8.8.SP1.exe\n\n\n\n(如果你直接弹出英文安装向导就看下一条)  点击下一步，再点下一步如果需要你安装什么组件就选是  \n\n\n\n(大部分情况应该没有上一条的步骤)   待进度条读完，弹出英文的安装界面\n\n\n\n点击Next进入条款界面，直接勾选I accept the terms of this agreement\n\n\n\n点击Next，选择Use a locally installed license key\n\n\n\n点击Next，会提示No Licence Key found for Proteus Click Next to install one.不用管\n\n\n\n点击Next，这个时候会新弹出来一个对话框，这是用来选择并安装本地证书的\n\n\n\n点击左下角Browse For Key File，会弹出来一个选择证书文件的对话框，找到一开始准备好的Crack文件夹，选中Crack文件夹中的Licence.lxk，并点击打开\n\n\n\n这个时候就能看到证书管理窗口中左边已经有东西了\n\n\n\n点击并选中All Design Tools，再点击下方的Install，弹出来的确认对话框中选择是\n\n\n\n证书管理窗口左边也出现东西之后就可以点击Close关闭该窗口了\n\n\n\n关闭之后，安装向导会给出三个选项，这里都不勾选直接点击Next\n\n\n\n然后提示你选择Typical还是Custom，Typical是默认安装，软件会装在C盘，Custom会让你自己选择路径。这里直接选择Typical\n\n\n\n等待读条结束后先不要点击Run Proteus 8 Professional或打开Proteus。这里直接点击Close关闭安装向导\n\n\n\n运行破解程序\n找到一开始准备的Crack文件夹，将其中的Patch.exe复制\n\n打开Proteus的安装目录，并将刚复制的Patch.exe粘贴在这里。如果你在上面安装的过程中选择的是Typical安装，那么路径应该为C:\\Program Files (x86)\\Labcenter Electronics\\Proteus 8 Professional\\\n\n\n鼠标右键点击Proteus安装目录下的Patch.exe文件，并选择以管理员身份运行，应该不会有什么反应，建议运行几次   这简直是玄学\n\n\n应用汉化翻译\n找到一开始准备的Translations文件夹，复制这个文件夹\n\n打开Proteus的安装目录，直接粘贴，若提示是否合并或者替换，选择 是 即可\n\n\n\n此时Proteus8.8就算安装成功了，双击桌面图标开始使用（自己在电脑上安装的Proteus8.8不用以管理员身份运行）\n","slug":"05077cf2c12b17104d7a64cc6bea21c9","date":"2024-04-14T00:25:46.000Z","categories_index":"课程","tags_index":"软件,单片机","author_index":"Nexaris"},{"id":"448097c5389b3ecf3581bba55a8a5ad6","title":"单片机Keil编程基础及实例","content":"单片机课程中除了需要画出原理图，还要根据自己的目的给单片机编写程序。\n由于Keil是纯英文界面，不是特别友好，下面记录一些基础使用方法\n新建工程Keil窗口左上，点击Project - New uVision Project\n\n然后会弹出保存路径的对话框，任意填写即可\n\n\n\n\n\n\nTIP\n路径推荐设置为和你的Protetus工程一样的路径，这样在之后编译出来的程序就在Proteus工程目录\\Objects\\中\n\n\n\n选择好路径之后需要选择一个设备，根据你在Proteus使用的单片机型号来选择，这里选的是AT89C51\n\n这里点击OK之后会再次弹出一个Yes或者No的对话框，选 是 就行。\n\n此时左边的目录栏应该已经有东西了，点击Target 1左边的加号按钮来展开。\n再鼠标右键点击Source Group 1，选择Add new item to Group &#39;Source Group 1&#39;\n\n然后会弹出来一个创建文件的对话框，这里选择C语言，名称随意。\n\n最后点击Add，就会有输入代码的界面了\n勾选生成Hex文件功能在开始之前，需要勾选一个功能，否则代码写完不会编译成.hex文件，也就没办法导入到Proteus运行。\n点击那个类似魔术棒的按钮之后，在弹出来的窗口点击Output，然后勾选Create Hex File\n\n开始编写使用的编程语言为C语言，主要内容都和标准的C语言写法一样。\n单片机程序中会用到while循环语句，if条件语句等等相对特殊的语句，你可能会需要先对这两个做一个基本的了解\n\nif条件语句if意为“如果”，else意为“否则”。很简单，粗略解释if条件语句就是：如果XXX条件符合，那么执行YYY，否则执行ZZZ\n在代码中如下表示：\nif (XXX) &#123;\n\tYYY;\n&#125;\nelse &#123;\n    ZZZ;\n&#125;\n\n举个例子，如果满足A &#x3D;&#x3D; 10，就输出你好，否则输出大家好\nA = 10;\nif (A == 10) &#123;\n    printf(&quot;你好&quot;);\n&#125;\nelse &#123;\n    printf(&quot;大家好&quot;);\n&#125;\n\nC 语言把任何非零和非空的值假定为true（肯定），把零或null假定为false（否定）\n\n\nwhile循环它的基本语法为\nwhile(条件) &#123;符合条件时将要循环执行的内容&#125;\n\n在程序中如果while中设置的条件是满足的，那么就会进行循环，直到条件不满足时会停止循环，并继续执行while语句之后的代码\nC 语言把任何非零和非空的值假定为true（肯定），把零或null假定为false（否定）\n而while循环的条件若直接为true（肯定）的话就是死循环，除非终止进程，否则它会一直循环下去\n我们在单片机里面目前只需要用到死循环，所以默认使用while的时候为while(1)，while(1) {}将会一直重复大括号里的内容，直到程序进程被强制结束。\n比如我想要程序一直反复输出你好，就可以像这样：\nwhile(1) &#123;\n\tprintf(&quot;你好&quot;);\n&#125;\n\n\n下面是另外一个编程语言语言中while循环的图示，语法不同，但逻辑都是一样的\n\n这个动图所展示的逻辑是 设a&#x3D;1，当a小于10的时候重复执行输出a的数值再+2\n仔细梳理一下的话还是很好理解的\n\n实例分析下面以4月12号课程中利用开关控制LED行为作为实例\n附上对应的Proteus原理图：\n\n//以下代码中出现中文仅为了更好理解，Keil中输入中文会显示为问号\n#include &lt;reg52.h&gt;       //这一行的作用是引用头文件，表示以下内容有部分命令来自reg52.h\nsbit LED灯=P1^0;         //使用sbit定义单片机芯片上P1.0针脚为 LED灯 ，定义时仅能为P1^0\nsbit 开关=P3^0;           //使用sbit定义单片机芯片上P3.0针脚为 开关 \n\nvoid main() &#123;            //定义main函数，可以粗略理解为你想要实现的功能从这一句开始\n    while(1) &#123;           //这里使用了一个while循环，让单片机一直重复执行以下命令直到终止\n        if (开关==0) &#123;    //使用if检测开关的电平状态，这里为若为低电平则LED灯得到低电平信号\n            LED灯=0;      //同上\n        &#125;\n        else &#123;            //else指除了上面if指定的 开关==0 情况以外的所有情况\n            LED灯=1;      //指的是当SW为非0时会执行 LED灯=1,意为LED灯得到一个高电平信号\n        &#125;\n    &#125;\n&#125;\n\n上述代码中实现的是控制开关闭合或者断开发出高或者低电平来让LED灯获取高或者低电平从而达到利用开关控制LED灯的行为。代码中仅利用开关来控制LED灯的亮或灭的状态，进阶一点的话可以使开关处于闭合状态时，LED灯不停闪烁。\n#include &lt;reg52.h&gt;是通用的，可能之后的每一个程序中都要包含这一句万金油\nsbit是用来定义单片机芯片针脚的，相当于你随便定义一个关键字给某个针脚用来在程序中指定这个针脚\n","slug":"448097c5389b3ecf3581bba55a8a5ad6","date":"2024-04-13T10:50:51.000Z","categories_index":"课程","tags_index":"单片机,C语言","author_index":"Nexaris"},{"id":"c754b75a815e74ddc69143dd4e420a68","title":"单片机Proteus基础内容","content":"本文将根据头一节单片机课程内容梳理Proteus软件的使用方法以及部分注意事项\n打开程序在机房的电脑上打开Proteus的时候需要鼠标右键单击图标，选择以管理员身份运行\n\n如果直接打开软件可能会出现元件列表没有任何选项的情况\n新建项目Proteus主页点击新建工程\n在弹出来的对话框中选择名称和路径，任意位置即可，但要记得住。\n\n\n\n\n\n\nTIP\n推荐在自己的U盘中新建一个文件夹，如单片机，然后根据每一次新建的工程名称创建一个同名文件夹，并选择该路径。   Eg. 路径：F:\\单片机\\单灯闪烁；名称：单灯闪烁.pdsprj\n\n\n路径和名称填写好之后点击下一步\n创建原理图的选项默认应为从选中的模板创建原理图。，并且自动选中的DEFAULT，保持这样点击下一步\nPCB布版设计选择不创建，这也是默认选项\n固件文件同样保持默认\n最后点击完成将会自动跳转到 原理图绘制 界面。\n元件模式刚进入到原理图绘制界面的时候左侧菜单默认为元件模式，点击原理图略缩图下方的P就可以进入选择元器件的界面了\n\n在选择需要的元件之后就可以在左侧菜单中选中它，鼠标光标会变成一支笔的样式，这个时候在原理图上点击就可以开始放置。选择好位置之后，再次单击完成放置。\n\n\n下面列出几个目前课上常用的元件关键字：AT89C51\n类别 Microprocessor ICs &gt; 子类别 8051 Family \n芯片  目前所有课程实例都选用的这个\n\n\n关键字：CAP\n类别 Capacitors &gt; 子类别 Generic\n非极性电容\n\n\n关键字：CAP-ELEC\n类别 Capacitors &gt; 子类别 Generic\n极性电容\n\n\n关键字：RES\n类别 Resistors &gt; 子类别 Generic\n电阻，目前为止貌似只用过这个\n\n\n关键字：CRYSTAL\n类别 Miscellaneous\n晶振 好像是叫这个，听老师念的\n\n\n关键字：SWITCH\n类别 Switches &amp; Relays &gt; 子类别 Switches\n开关\n\n\n关键字：BUTTON\n类别 Switches &amp; Relays &gt; 子类别 Switches\n按钮\n\n\n关键字：LED-RED 或 LED-GREEN\n类别 Optoelectronics &gt; 子类别 LEDs\nLED灯，这里根据关键字选择不同颜色的\n\n\n终端模式终端模式用于放置电源，接地，目前只使用POWER（电源） , GROUND（接地）\n\n\n导入程序往单片机导入编译好的程序文件只需要双击放置好了的板子，在弹出的对话框中设置Program File的路径\n\n","slug":"c754b75a815e74ddc69143dd4e420a68","date":"2024-04-13T05:56:08.000Z","categories_index":"课程","tags_index":"单片机","author_index":"Nexaris"}]