{"title":"单片机Keil编程基础及实例","uid":"448097c5389b3ecf3581bba55a8a5ad6","slug":"448097c5389b3ecf3581bba55a8a5ad6","date":"2024-04-13T10:50:51.000Z","updated":"2024-05-14T18:18:34.000Z","comments":true,"path":"api/articles/448097c5389b3ecf3581bba55a8a5ad6.json","keywords":null,"cover":"https://picsforblog3133.oss-cn-beijing.aliyuncs.com/img/keil.png","content":"<p>单片机课程中除了需要画出原理图，还要根据自己的目的给单片机编写程序。</p>\n<p>由于Keil是纯英文界面，不是特别友好，下面记录一些基础使用方法</p>\n<h2 id=\"新建工程\"><a href=\"#新建工程\" class=\"headerlink\" title=\"新建工程\"></a>新建工程</h2><p>Keil窗口左上，点击Project - New uVision Project</p>\n<p><img src=\"https://picsforblog3133.oss-cn-beijing.aliyuncs.com/img/image-20240413190521070.png\" alt=\"keil新建项目\"></p>\n<p>然后会弹出保存路径的对话框，任意填写即可</p>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">TIP</p>\n<p>路径推荐设置为和你的Protetus工程一样的路径，这样在之后编译出来的程序就在<code>Proteus工程目录\\Objects\\</code>中</p>\n\n</div>\n<hr>\n<p>选择好路径之后需要选择一个设备，根据你在Proteus使用的单片机型号来选择，这里选的是AT89C51</p>\n<p><img src=\"https://picsforblog3133.oss-cn-beijing.aliyuncs.com/img/image-20240413192130940.png\" alt=\"选择设备\"></p>\n<p>这里点击<code>OK</code>之后会再次弹出一个Yes或者No的对话框，选 是 就行。</p>\n<hr>\n<p>此时左边的目录栏应该已经有东西了，点击<code>Target 1</code>左边的加号按钮来展开。</p>\n<p>再鼠标右键点击<code>Source Group 1</code>，选择<code>Add new item to Group &#39;Source Group 1&#39;</code></p>\n<p><img src=\"https://picsforblog3133.oss-cn-beijing.aliyuncs.com/img/%E6%B7%BB%E5%8A%A0%E6%96%87%E4%BB%B6.png\"></p>\n<p>然后会弹出来一个创建文件的对话框，这里选择C语言，名称随意。</p>\n<p><img src=\"https://picsforblog3133.oss-cn-beijing.aliyuncs.com/img/%E5%88%9B%E5%BB%BAc%E6%96%87%E4%BB%B6.png\"></p>\n<p>最后点击<code>Add</code>，就会有输入代码的界面了</p>\n<h3 id=\"勾选生成Hex文件功能\"><a href=\"#勾选生成Hex文件功能\" class=\"headerlink\" title=\"勾选生成Hex文件功能\"></a>勾选生成Hex文件功能</h3><p>在开始之前，需要勾选一个功能，否则代码写完不会编译成.hex文件，也就没办法导入到Proteus运行。</p>\n<p>点击那个<code>类似魔术棒的按钮</code>之后，在弹出来的窗口点击<code>Output</code>，然后勾选<code>Create Hex File</code></p>\n<p><img src=\"https://picsforblog3133.oss-cn-beijing.aliyuncs.com/img/%E7%94%9F%E6%88%90hex%E6%96%87%E4%BB%B6.gif\" alt=\"生成hex文件\"></p>\n<h2 id=\"开始编写\"><a href=\"#开始编写\" class=\"headerlink\" title=\"开始编写\"></a>开始编写</h2><p>使用的编程语言为C语言，主要内容都和标准的C语言写法一样。</p>\n<p>单片机程序中会用到while循环语句，if条件语句等等相对特殊的语句，你可能会需要先对这两个做一个基本的了解</p>\n<hr>\n<h3 id=\"if条件语句\"><a href=\"#if条件语句\" class=\"headerlink\" title=\"if条件语句\"></a>if条件语句</h3><p>if意为“如果”，else意为“否则”。很简单，粗略解释if条件语句就是：如果XXX条件符合，那么执行YYY，否则执行ZZZ</p>\n<p>在代码中如下表示：</p>\n<pre><code class=\"language-c\">if (XXX) &#123;\n\tYYY;\n&#125;\nelse &#123;\n    ZZZ;\n&#125;\n</code></pre>\n<p>举个例子，如果满足A &#x3D;&#x3D; 10，就输出<code>你好</code>，否则输出<code>大家好</code></p>\n<pre><code class=\"language-c\">A = 10;\nif (A == 10) &#123;\n    printf(&quot;你好&quot;);\n&#125;\nelse &#123;\n    printf(&quot;大家好&quot;);\n&#125;\n</code></pre>\n<p>C 语言把任何<strong>非零</strong>和<strong>非空</strong>的值假定为<strong>true（肯定）</strong>，把<strong>零</strong>或<strong>null</strong>假定为<strong>false（否定）</strong></p>\n<p><img src=\"https://picsforblog3133.oss-cn-beijing.aliyuncs.com/img/if%E6%9D%A1%E4%BB%B6%E8%AF%AD%E5%8F%A5.svg\"></p>\n<hr>\n<h3 id=\"while循环\"><a href=\"#while循环\" class=\"headerlink\" title=\"while循环\"></a>while循环</h3><p>它的基本语法为</p>\n<pre><code class=\"language-c\">while(条件) &#123;符合条件时将要循环执行的内容&#125;\n</code></pre>\n<p>在程序中如果while中设置的条件是满足的，那么就会进行循环，直到条件不满足时会停止循环，并继续执行while语句之后的代码</p>\n<p>C 语言把任何<strong>非零</strong>和<strong>非空</strong>的值假定为<strong>true（肯定）</strong>，把<strong>零</strong>或<strong>null</strong>假定为<strong>false（否定）</strong></p>\n<p>而while循环的条件若直接为true（肯定）的话就是死循环，除非终止进程，否则它会一直循环下去</p>\n<p>我们在单片机里面目前只需要用到死循环，所以默认使用while的时候为while(1)，while(1) {}将会一直重复大括号里的内容，直到程序进程被强制结束。</p>\n<p>比如我想要程序一直反复输出<code>你好</code>，就可以像这样：</p>\n<pre><code class=\"language-c\">while(1) &#123;\n\tprintf(&quot;你好&quot;);\n&#125;\n</code></pre>\n<hr>\n<p>下面是另外一个编程语言语言中while循环的图示，<strong>语法不同</strong>，但<strong>逻辑都是一样的</strong></p>\n<p><img src=\"https://picsforblog3133.oss-cn-beijing.aliyuncs.com/img/while%E5%BE%AA%E7%8E%AF%E5%9B%BE%E7%A4%BA.gif\"></p>\n<p>这个动图所展示的逻辑是 设a&#x3D;1，当a小于10的时候重复执行输出a的数值再+2</p>\n<p>仔细梳理一下的话还是很好理解的</p>\n<hr>\n<h2 id=\"实例分析\"><a href=\"#实例分析\" class=\"headerlink\" title=\"实例分析\"></a>实例分析</h2><p>下面以4月12号课程中利用开关控制LED行为作为实例</p>\n<p>附上对应的Proteus原理图：</p>\n<p><img src=\"https://picsforblog3133.oss-cn-beijing.aliyuncs.com/img/%E5%BC%80%E5%85%B3LED.png\"></p>\n<pre><code class=\"language-c\">//以下代码中出现中文仅为了更好理解，Keil中输入中文会显示为问号\n#include &lt;reg52.h&gt;       //这一行的作用是引用头文件，表示以下内容有部分命令来自reg52.h\nsbit LED灯=P1^0;         //使用sbit定义单片机芯片上P1.0针脚为 LED灯 ，定义时仅能为P1^0\nsbit 开关=P3^0;           //使用sbit定义单片机芯片上P3.0针脚为 开关 \n\nvoid main() &#123;            //定义main函数，可以粗略理解为你想要实现的功能从这一句开始\n    while(1) &#123;           //这里使用了一个while循环，让单片机一直重复执行以下命令直到终止\n        if (开关==0) &#123;    //使用if检测开关的电平状态，这里为若为低电平则LED灯得到低电平信号\n            LED灯=0;      //同上\n        &#125;\n        else &#123;            //else指除了上面if指定的 开关==0 情况以外的所有情况\n            LED灯=1;      //指的是当SW为非0时会执行 LED灯=1,意为LED灯得到一个高电平信号\n        &#125;\n    &#125;\n&#125;\n</code></pre>\n<p>上述代码中实现的是控制开关闭合或者断开发出高或者低电平来让LED灯获取高或者低电平从而达到利用开关控制LED灯的行为。代码中仅利用开关来控制LED灯的亮或灭的状态，进阶一点的话可以使开关处于闭合状态时，LED灯不停闪烁。</p>\n<p><code>#include &lt;reg52.h&gt;</code>是通用的，可能之后的每一个程序中都要包含这一句<span class=\"spoiler\" onclick=\"this.classList.toggle('spoiler')\"><span class=\"spoiler-blur \">万金油</span></span></p>\n<p>sbit是用来定义单片机芯片针脚的，相当于你随便定义一个关键字给某个针脚用来在程序中指定这个针脚</p>\n","feature":false,"text":"单片机课程中除了需要画出原理图，还要根据自己的目的给单片机编写程序。 由于Keil是纯英文界面，不是特别友好，下面记录一些基础使用方法 新建工程Keil窗口左上...","permalink":"/post/448097c5389b3ecf3581bba55a8a5ad6","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"课程","slug":"课程","count":4,"path":"api/categories/课程.json"}],"tags":[{"name":"单片机","slug":"单片机","count":3,"path":"api/tags/单片机.json"},{"name":"C语言","slug":"C语言","count":1,"path":"api/tags/C语言.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%B0%E5%BB%BA%E5%B7%A5%E7%A8%8B\"><span class=\"toc-text\">新建工程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8B%BE%E9%80%89%E7%94%9F%E6%88%90Hex%E6%96%87%E4%BB%B6%E5%8A%9F%E8%83%BD\"><span class=\"toc-text\">勾选生成Hex文件功能</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BC%80%E5%A7%8B%E7%BC%96%E5%86%99\"><span class=\"toc-text\">开始编写</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#if%E6%9D%A1%E4%BB%B6%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">if条件语句</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#while%E5%BE%AA%E7%8E%AF\"><span class=\"toc-text\">while循环</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E4%BE%8B%E5%88%86%E6%9E%90\"><span class=\"toc-text\">实例分析</span></a></li></ol>","author":{"name":"Nexaris","slug":"blog-author","avatar":"https://picsforblog3133.oss-cn-beijing.aliyuncs.com/img/avatar.jpg","link":"/","description":"仍在寻找前方的道路","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Proteus8.8和Keil的安装过程","uid":"05077cf2c12b17104d7a64cc6bea21c9","slug":"05077cf2c12b17104d7a64cc6bea21c9","date":"2024-04-14T00:25:46.000Z","updated":"2024-05-14T18:18:07.000Z","comments":true,"path":"api/articles/05077cf2c12b17104d7a64cc6bea21c9.json","keywords":null,"cover":"https://picsforblog3133.oss-cn-beijing.aliyuncs.com/img/Konachan.com%20-%20375660%20sample.jpg","text":"单片机课上需要用到Proteus，Keil两款软件。Proteus用于绘制原理图以及仿真模拟，Keil用于编写单片机使用的程序，下面记录了这两款软件的安装过程 ...","permalink":"/post/05077cf2c12b17104d7a64cc6bea21c9","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"课程","slug":"课程","count":4,"path":"api/categories/课程.json"}],"tags":[{"name":"软件","slug":"软件","count":2,"path":"api/tags/软件.json"},{"name":"单片机","slug":"单片机","count":3,"path":"api/tags/单片机.json"}],"author":{"name":"Nexaris","slug":"blog-author","avatar":"https://picsforblog3133.oss-cn-beijing.aliyuncs.com/img/avatar.jpg","link":"/","description":"仍在寻找前方的道路","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},"next_post":{"title":"单片机Proteus基础内容","uid":"c754b75a815e74ddc69143dd4e420a68","slug":"c754b75a815e74ddc69143dd4e420a68","date":"2024-04-13T05:56:08.000Z","updated":"2024-05-14T18:18:39.000Z","comments":true,"path":"api/articles/c754b75a815e74ddc69143dd4e420a68.json","keywords":null,"cover":"https://picsforblog3133.oss-cn-beijing.aliyuncs.com/img/Proteus.png","text":"本文将根据头一节单片机课程内容梳理Proteus软件的使用方法以及部分注意事项 打开程序在机房的电脑上打开Proteus的时候需要鼠标右键单击图标，选择以管理员...","permalink":"/post/c754b75a815e74ddc69143dd4e420a68","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"课程","slug":"课程","count":4,"path":"api/categories/课程.json"}],"tags":[{"name":"单片机","slug":"单片机","count":3,"path":"api/tags/单片机.json"}],"author":{"name":"Nexaris","slug":"blog-author","avatar":"https://picsforblog3133.oss-cn-beijing.aliyuncs.com/img/avatar.jpg","link":"/","description":"仍在寻找前方的道路","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}