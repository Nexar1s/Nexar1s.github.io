{"title":"首次使用Pipenv","uid":"0cf4458af37e18777158807fe15efcc1","slug":"0cf4458af37e18777158807fe15efcc1","date":"2025-03-31T10:19:53.815Z","updated":"2024-05-14T18:17:56.000Z","comments":true,"path":"api/articles/0cf4458af37e18777158807fe15efcc1.json","keywords":null,"cover":"https://picsforblog3133.oss-cn-beijing.aliyuncs.com/img/pipenv.png","content":"<p>Ubuntu 23.10的情况下使用<code>pip install -r requirements.txt</code>时出现问题</p>\n<pre><code class=\"language-shell\">❯ pip3 install -r requirements.txt\nerror: externally-managed-environment\n\n× This environment is externally managed\n╰─&gt; To install Python packages system-wide, try apt install\n    python3-xyz, where xyz is the package you are trying to\n    install.\n    \n    If you wish to install a non-Debian-packaged Python package,\n    create a virtual environment using python3 -m venv path/to/venv.\n    Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make\n    sure you have python3-full installed.\n    \n    If you wish to install a non-Debian packaged Python application,\n    it may be easiest to use pipx install xyz, which will manage a\n    virtual environment for you. Make sure you have pipx installed.\n    \n    See /usr/share/doc/python3.11/README.venv for more information.\n\nnote: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.\nhint: See PEP 668 for the detailed specification.\n</code></pre>\n<h2 id=\"背后的原因\"><a href=\"#背后的原因\" class=\"headerlink\" title=\"背后的原因\"></a>背后的原因</h2><p>目前多个Linux最新的发行版中，正在使用Python包来实现增强功能。</p>\n<p>这个更新是为了避免「操作系统包管理器 (如pacman、yum、apt) 和 pip 等特定于 Python 的包管理工具之间的冲突」。</p>\n<p>更多详情可以在官网查看：</p>\n<p>[Python增强提案]: </p>\n<p>[Python增强提案(PEP)]: <a href=\"https://realpython.com/python-virtual-environments-a-primer/?ref=yaolong.net\">https://realpython.com/python-virtual-environments-a-primer/?ref=yaolong.net</a>\t“PEP 668 - Python base environments”</p>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><p>使用pipenv</p>\n<pre><code class=\"language-shell\">sudo apt install pipenv -y\n</code></pre>\n<p>Pipenv是官方推荐的python包管理工具，可以实现项目之间依赖的隔离。</p>\n<h3 id=\"虚拟环境\"><a href=\"#虚拟环境\" class=\"headerlink\" title=\"虚拟环境\"></a>虚拟环境</h3><p>简单来讲，虚拟环境就是隔离你项目中安装的库的一个环境。想象一下，如果想在当前电脑中做几个需要不同依赖以及不同的库的项目，而其中要求了不同版本的同一依赖，直接安装的话可能会带来意想不到的麻烦。因此，通常我们会为每一个项目都创建一个虚拟环境，以此来隔离各个项目的工作环境。</p>\n<h3 id=\"创建虚拟环境\"><a href=\"#创建虚拟环境\" class=\"headerlink\" title=\"创建虚拟环境\"></a>创建虚拟环境</h3><p>创建自己的项目目录，在该目录下使用命令<code>pipenv install</code>可以创建一个虚拟的环境。默认为当前全局环境中已有的Python版本</p>\n<p>如果想指定创建的虚拟环境的Python版本，可以使用以下命令：</p>\n<pre><code class=\"language-shell\">pipenv --python 3.6   #指定使用Python3.6的虚拟环境\npipenv --two          #使用系统的Python2来创建虚拟环境\npipenv --three\t\t  #使用系统的Python3来创建虚拟环境\n\n#注意：以上三个参数只能单独使用。它们还具有破坏性，会删除当前的虚拟环境，然后用适当版本的虚拟环境替代\n</code></pre>\n<p>当给定了一个Python版本的时候，Pipenv会自动扫描系统中能够匹配给定的Pyhton版本的Python解释器，没制定版本时，使用系统默认的Python版本。</p>\n<p>执行完命令，项目文件夹会生成两个文件，<code>Pipfile``和Pipfile.lock</code>。如果命令执行前项目目录中不存在Pipfile文件，该命令将会创建一个Pipfile文件。如果已经有Pipfile，存在则会根据这个Pipfile生成虚拟环境。</p>\n<h3 id=\"Pipfile内容解析\"><a href=\"#Pipfile内容解析\" class=\"headerlink\" title=\"Pipfile内容解析\"></a>Pipfile内容解析</h3><p>打开Pipfile文件，可以看到如下内容：</p>\n<pre><code class=\"language-toml\">[[source]]\nurl = &quot;https://pypi.org/simple&quot;\nverify_ssl = true\nname = &quot;pypi&quot;\n\n[packages]\njsbeautifier = &quot;==1.14.0&quot;\njsmin = &quot;==3.0.0&quot;\nloguru = &quot;==0.5.3&quot;\npycryptodome = &quot;==3.11.0&quot;\n\n[dev-packages]\n\n[requires]\npython_version = &quot;3.11&quot;\n</code></pre>\n<ul>\n<li><code>source </code>用来设置仓库地址，即从哪下载虚拟环境所需要的包</li>\n<li><code>packages</code>用来制定项目依赖的包，即你安装了的想要引用到虚拟环境的包</li>\n<li><code>dev-packages</code>用来指定开发环境需要的包，这类包只用于开发过程，不用于生产环境，比如单元测试相关的包，只在开发阶段有用，这样分开便于管理</li>\n<li><code>requires</code>中制定目标Python版本</li>\n</ul>\n<h3 id=\"Pipfile-lock文件\"><a href=\"#Pipfile-lock文件\" class=\"headerlink\" title=\"Pipfile.lock文件\"></a>Pipfile.lock文件</h3><ul>\n<li><code>Pipfile.lock</code>中记录了当前虚拟环境中安装的依赖的版本号以及哈希，以保证被次根据这些值出来的依赖都是一致的，该文件用来保证包的完整性。记住，任何情况下都不要手动修改该文件！</li>\n<li>项目提交时，可将<code>Pipfile</code>文件和<code>Pipfile.lock</code>一并提交，给其他开发人员克隆下载，他们可以根据此Pipfile文件运行命令<code>pipenv install</code>生成自己的虚拟环境。</li>\n</ul>\n","feature":false,"text":"Ubuntu 23.10的情况下使用pip install -r requirements.txt时出现问题 ❯ pip3 install -r require...","permalink":"/post/0cf4458af37e18777158807fe15efcc1","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"Linux","slug":"Linux","count":1,"path":"api/categories/Linux.json"}],"tags":[{"name":"Linux","slug":"Linux","count":1,"path":"api/tags/Linux.json"},{"name":"Python","slug":"Python","count":1,"path":"api/tags/Python.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%83%8C%E5%90%8E%E7%9A%84%E5%8E%9F%E5%9B%A0\"><span class=\"toc-text\">背后的原因</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88\"><span class=\"toc-text\">解决方案</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83\"><span class=\"toc-text\">虚拟环境</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83\"><span class=\"toc-text\">创建虚拟环境</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Pipfile%E5%86%85%E5%AE%B9%E8%A7%A3%E6%9E%90\"><span class=\"toc-text\">Pipfile内容解析</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Pipfile-lock%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">Pipfile.lock文件</span></a></li></ol></li></ol>","author":{"name":"Nexaris","slug":"blog-author","avatar":"https://picsforblog3133.oss-cn-beijing.aliyuncs.com/img/avatar.jpg","link":"/","description":"仍在寻找前方的道路","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"重航两江校园网同时登录两台手机或电脑","uid":"6ff25304366cbef72174e3c9a2bdc051","slug":"6ff25304366cbef72174e3c9a2bdc051","date":"2024-04-22T16:52:12.000Z","updated":"2024-04-23T04:28:58.000Z","comments":true,"path":"api/articles/6ff25304366cbef72174e3c9a2bdc051.json","keywords":null,"cover":"https://picsforblog3133.oss-cn-beijing.aliyuncs.com/img/Konachan.com%20-%20375698%20sample.jpg","text":"关于校园网 重航两江校区这边的话，联通校园卡给的宽带是限制了一部手机和一台电脑同时使用。根据需求有时候需要两台手机或者两台电脑使用的话就相当的麻烦了，甚至很多同...","permalink":"/post/6ff25304366cbef72174e3c9a2bdc051","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"网络","slug":"网络","count":1,"path":"api/categories/网络.json"}],"tags":[{"name":"网络","slug":"网络","count":1,"path":"api/tags/网络.json"}],"author":{"name":"Nexaris","slug":"blog-author","avatar":"https://picsforblog3133.oss-cn-beijing.aliyuncs.com/img/avatar.jpg","link":"/","description":"仍在寻找前方的道路","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"Proteus8.8和Keil的安装过程","uid":"05077cf2c12b17104d7a64cc6bea21c9","slug":"05077cf2c12b17104d7a64cc6bea21c9","date":"2024-04-14T00:25:46.000Z","updated":"2024-05-14T18:18:07.000Z","comments":true,"path":"api/articles/05077cf2c12b17104d7a64cc6bea21c9.json","keywords":null,"cover":"https://picsforblog3133.oss-cn-beijing.aliyuncs.com/img/Konachan.com%20-%20375660%20sample.jpg","text":"单片机课上需要用到Proteus，Keil两款软件。Proteus用于绘制原理图以及仿真模拟，Keil用于编写单片机使用的程序，下面记录了这两款软件的安装过程 ...","permalink":"/post/05077cf2c12b17104d7a64cc6bea21c9","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"课程","slug":"课程","count":4,"path":"api/categories/课程.json"}],"tags":[{"name":"软件","slug":"软件","count":2,"path":"api/tags/软件.json"},{"name":"单片机","slug":"单片机","count":3,"path":"api/tags/单片机.json"}],"author":{"name":"Nexaris","slug":"blog-author","avatar":"https://picsforblog3133.oss-cn-beijing.aliyuncs.com/img/avatar.jpg","link":"/","description":"仍在寻找前方的道路","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false}}